name: API Tests with Allure Report

on:
  push:
    branches:
      - main
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * *"

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.0.x"

      - name: Restore dependencies
        run: dotnet restore

      - name: Run tests with Allure
        env:
          USER_PASSWORD: ${{ secrets.USER_PASSWORD }}
          USER_NAME: ${{ secrets.USER_NAME }}
          USER_COMPANY: ${{ secrets.USER_COMPANY }}
        run: dotnet test --settings:ApiTestingDemo.Tests/test.runsettings -- TestRunParameters.Parameter\(name=\"AuthUrl\",\ value=\"${{ secrets.AUTH_URL }}\"\)

      - name: Upload Allure results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-results
          path: allure-results
          retention-days: 30

  report:
    runs-on: ubuntu-latest
    needs: test
    if: always()

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download Allure results
        uses: actions/download-artifact@v4
        with:
          name: allure-results
          path: allure-results

      - name: Checkout gh-pages for history
        uses: actions/checkout@v4
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Copy previous Allure history
        run: |
          if [ -d "gh-pages/allure-report/history" ]; then
            mkdir -p allure-results/history
            cp -r gh-pages/allure-report/history/* allure-results/history/
            echo "Copied Allure history from previous run"
          fi

      - name: Setup Java for Allure
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Download Allure CLI
        run: |
          curl -o allure-commandline.zip -L https://github.com/allure-framework/allure2/releases/download/2.32.0/allure-2.32.0.zip
          unzip allure-commandline.zip -d .
          sudo ln -s $(pwd)/allure-2.32.0/bin/allure /usr/local/bin/allure

      - name: Generate Allure HTML report
        run: allure generate allure-results -o allure-report --clean

      - name: Create downloadable ZIP of Allure report
        run: |
          cd allure-report
          zip -r ../allure-report.zip .
          cd ..

      - name: Upload Allure HTML report as artifact
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: allure-report
          path: allure-report.zip
          retention-days: 30

      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./allure-report
          publish_branch: gh-pages
          keep_files: false
